/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HospitalDetails as PrismaHospitalDetails,
} from "@prisma/client";

export class HospitalDetailsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HospitalDetailsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hospitalDetails.count(args);
  }

  async hospitalDetailsItems(
    args: Prisma.HospitalDetailsFindManyArgs
  ): Promise<PrismaHospitalDetails[]> {
    return this.prisma.hospitalDetails.findMany(args);
  }
  async hospitalDetails(
    args: Prisma.HospitalDetailsFindUniqueArgs
  ): Promise<PrismaHospitalDetails | null> {
    return this.prisma.hospitalDetails.findUnique(args);
  }
  async createHospitalDetails(
    args: Prisma.HospitalDetailsCreateArgs
  ): Promise<PrismaHospitalDetails> {
    return this.prisma.hospitalDetails.create(args);
  }
  async updateHospitalDetails(
    args: Prisma.HospitalDetailsUpdateArgs
  ): Promise<PrismaHospitalDetails> {
    return this.prisma.hospitalDetails.update(args);
  }
  async deleteHospitalDetails(
    args: Prisma.HospitalDetailsDeleteArgs
  ): Promise<PrismaHospitalDetails> {
    return this.prisma.hospitalDetails.delete(args);
  }
}
