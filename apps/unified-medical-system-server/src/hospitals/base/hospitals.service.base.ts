/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Hospitals as PrismaHospitals } from "@prisma/client";

export class HospitalsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HospitalsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hospitals.count(args);
  }

  async hospitalsItems(
    args: Prisma.HospitalsFindManyArgs
  ): Promise<PrismaHospitals[]> {
    return this.prisma.hospitals.findMany(args);
  }
  async hospitals(
    args: Prisma.HospitalsFindUniqueArgs
  ): Promise<PrismaHospitals | null> {
    return this.prisma.hospitals.findUnique(args);
  }
  async createHospitals(
    args: Prisma.HospitalsCreateArgs
  ): Promise<PrismaHospitals> {
    return this.prisma.hospitals.create(args);
  }
  async updateHospitals(
    args: Prisma.HospitalsUpdateArgs
  ): Promise<PrismaHospitals> {
    return this.prisma.hospitals.update(args);
  }
  async deleteHospitals(
    args: Prisma.HospitalsDeleteArgs
  ): Promise<PrismaHospitals> {
    return this.prisma.hospitals.delete(args);
  }
}
