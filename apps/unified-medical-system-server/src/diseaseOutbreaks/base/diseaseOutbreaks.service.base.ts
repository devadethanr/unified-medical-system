/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DiseaseOutbreaks as PrismaDiseaseOutbreaks,
} from "@prisma/client";

export class DiseaseOutbreaksServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DiseaseOutbreaksCountArgs, "select">
  ): Promise<number> {
    return this.prisma.diseaseOutbreaks.count(args);
  }

  async diseaseOutbreaksItems(
    args: Prisma.DiseaseOutbreaksFindManyArgs
  ): Promise<PrismaDiseaseOutbreaks[]> {
    return this.prisma.diseaseOutbreaks.findMany(args);
  }
  async diseaseOutbreaks(
    args: Prisma.DiseaseOutbreaksFindUniqueArgs
  ): Promise<PrismaDiseaseOutbreaks | null> {
    return this.prisma.diseaseOutbreaks.findUnique(args);
  }
  async createDiseaseOutbreaks(
    args: Prisma.DiseaseOutbreaksCreateArgs
  ): Promise<PrismaDiseaseOutbreaks> {
    return this.prisma.diseaseOutbreaks.create(args);
  }
  async updateDiseaseOutbreaks(
    args: Prisma.DiseaseOutbreaksUpdateArgs
  ): Promise<PrismaDiseaseOutbreaks> {
    return this.prisma.diseaseOutbreaks.update(args);
  }
  async deleteDiseaseOutbreaks(
    args: Prisma.DiseaseOutbreaksDeleteArgs
  ): Promise<PrismaDiseaseOutbreaks> {
    return this.prisma.diseaseOutbreaks.delete(args);
  }
}
